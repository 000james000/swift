import Swift

@asmname("public_func") public func public_func<T>() -> T?


sil public_external @impl_func : $@thin <T> (@out Optional<T>) -> ()

sil shared [fragile] @shared_func : $@thin <T> (@out Optional<T>) -> () {
bb0(%0 : $*Optional<T>):
  %1 = function_ref @impl_func : $@thin <τ_0_0> (@out Optional<τ_0_0>) -> () // user: %2
  %2 = apply %1<T>(%0) : $@thin <τ_0_0> (@out Optional<τ_0_0>) -> ()
  %3 = tuple ()                                   // user: %4
  return %3 : $()                                 // id: %4
}

sil public [fragile] @public_func : $@thin <T> (@out Optional<T>) -> () {
bb0(%0 : $*Optional<T>):
  %1 = function_ref @shared_func : $@thin <τ_0_0> (@out Optional<τ_0_0>) -> () // user: %2
  %2 = apply %1<T>(%0) : $@thin <τ_0_0> (@out Optional<τ_0_0>) -> ()
  %3 = tuple ()                                   // user: %4
  return %3 : $()                                 // id: %4
}
