// RUN: rm -rf %t
// RUN: mkdir %t
// RUN: %target-swift-frontend -emit-module -sil-serialize-all -o %t %S/Inputs/def_generic.swift
// RUN: %target-sil-opt -linker -I %t %s | FileCheck %s

// Make sure that SILFunctionType with GenericSignature can match up with
// SILFunctionType deserialized from module.
sil_stage raw

import def_generic
import Builtin
import Swift

// CHECK-LABEL: sil @top_level_code
// CHECK: function_ref @_TFC11def_generic1A23convertFromArrayLiteralU__fGS0_Q__FtGSaQ___GS0_Q__
sil @top_level_code : $@thin () -> () {
bb0:
  %3 = function_ref @_TFC11def_generic1A23convertFromArrayLiteralU__fGS0_Q__FtGSaQ___GS0_Q__ : $@cc(method) @thin <T> (@owned Array<T>, @owned A<T>) -> @owned A<T>
  %0 = tuple ()                                   // user: %1
  return %0 : $()                                 // id: %1
}

// Make sure the function body is deserialized.
// CHECK-LABEL: @_TFC11def_generic1A23convertFromArrayLiteralU__fGS0_Q__FtGSaQ___GS0_Q__ : $@cc(method) @thin <T> (@owned Array<T>, @owned A<T>) -> @owned A<T> {
sil @_TFC11def_generic1A23convertFromArrayLiteralU__fGS0_Q__FtGSaQ___GS0_Q__ : $@cc(method) @thin <T> (@owned Array<T>, @owned A<T>) -> @owned A<T>
