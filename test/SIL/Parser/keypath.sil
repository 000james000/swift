// RUN: %target-sil-opt %s | %target-sil-opt | %FileCheck %s

sil_stage canonical

import Swift

struct S {
  var x: Int
  let y: String
  var z: C
}
class C {
  final var x: Int
  final let y: String
  final var z: S

  init()
}

// CHECK-LABEL: sil shared @stored_properties
sil shared @stored_properties : $@convention(thin) () -> () {
entry:
  // CHECK: keypath $WritableKeyPath<S, Int> (stored_property #S.x : $Int)
  %a = keypath $WritableKeyPath<S, Int> (stored_property #S.x : $Int)
  // CHECK: keypath $ReferenceWritableKeyPath<C, Int> (stored_property #C.x : $Int)
  %b = keypath $ReferenceWritableKeyPath<C, Int> (stored_property #C.x : $Int)
  // CHECK: keypath $KeyPath<S, String> (stored_property #S.y : $String)
  %c = keypath $KeyPath<S, String> (stored_property #S.y : $String)
  // CHECK: keypath $ReferenceWritableKeyPath<S, Int> (stored_property #S.z : $C, stored_property #C.x : $Int)
  %d = keypath $ReferenceWritableKeyPath<S, Int> (stored_property #S.z : $C, stored_property #C.x : $Int)

  return undef : $()
}
