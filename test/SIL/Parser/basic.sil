// RUN: %swift %s -emit-sil | FileCheck %s

var dummy : Int

// Linkage types.

// CHECK: sil clang_thunk @clang_thunk : $() -> ()
sil clang_thunk @clang_thunk : $() -> ()

// CHECK: sil internal @internal_fn : $() -> Int
sil internal @internal_fn : $() -> Int

// Type references

// Some cyclic type references between SIL function bodies.
class Class1 { var a : Class2 }
class Class2 { var b : Class1 }

sil @type_ref1 : $(a : Class1, b : Int) -> ()  // CHECK: $(a : Class1, b : Int64)


// Instructions

sil @test1 : $() -> () {              // CHECK: sil @test1 : $() -> ()
bb0:                                  // CHECK: bb0:
  %0 = tuple ()                       // CHECK:   %0 = tuple ()
  %1 = return %0 : $()                // CHECK:   %1 = return %0 : $()
}

// Forward referenced values.
// TODO: Use control flow to avoid building incorrect SSA.
sil @test2 : $() -> () {              // CHECK: sil @test2 : $() -> ()
bb0:                                  // CHECK: bb0:
  %1 = return %0 : $()                // CHECK:   %0 = return %1 : $()
  %0 = tuple ()                       // CHECK:   %1 = tuple ()
}

