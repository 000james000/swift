// RUN: %target-sil-opt -global-arc-opts -verify %s | FileCheck %s
// XFAIL: linux

sil_stage canonical

import Builtin
import Swift
import SwiftShims

// CHECK-LABEL: sil @sink_retain_accross_objectAtIndex
// CHECK:({{.*}} : $Int, {{.*}} : $_NSArrayCoreType, [[NO:%.*]] : $Builtin.NativeObject
// CHECK-NOT: strong_retain [[NO]]
// CHECK: [[EXIST:%.*]] = open_existential_ref
// CHECK-NOT: strong_retain [[NO]]
// CHECK: witness_method
// CHECK-NOT: strong_retain [[NO]]
// CHECK: apply
// CHECK-NOT: strong_retain [[NO]]
// CHECK: strong_retain_autoreleased
// CHECK: strong_release [[EXIST]]

sil @sink_retain_accross_objectAtIndex : $@thin (Int, @owned _NSArrayCoreType, Builtin.NativeObject) -> @owned AnyObject {
bb0(%0 : $Int, %1: $_NSArrayCoreType, %2 : $Builtin.NativeObject):
  strong_retain %2: $Builtin.NativeObject
  %5 = open_existential_ref %1 : $_NSArrayCoreType to $@opened("CCAECAA8-C8E4-11E4-9C38-C82A1428F987") _NSArrayCoreType
  %6 = witness_method [volatile] $@opened("CCAECAA8-C8E4-11E4-9C38-C82A1428F987") _NSArrayCoreType, #_NSArrayCoreType.objectAtIndex!1.foreign, %5 : $@opened("CCAECAA8-C8E4-11E4-9C38-C82A1428F987") _NSArrayCoreType : $@cc(objc_method) @thin <τ_0_0 where τ_0_0 : _NSArrayCoreType> (Int, τ_0_0) -> @autoreleased AnyObject
  %7 = apply %6<@opened("CCAECAA8-C8E4-11E4-9C38-C82A1428F987") _NSArrayCoreType>(%0, %5) : $@cc(objc_method) @thin <τ_0_0 where τ_0_0 : _NSArrayCoreType> (Int, τ_0_0) -> @autoreleased AnyObject
  strong_retain_autoreleased %7 : $AnyObject
  strong_release %2: $Builtin.NativeObject
  strong_release %5 : $@opened("CCAECAA8-C8E4-11E4-9C38-C82A1428F987") _NSArrayCoreType
  return %7 : $AnyObject
}

// CHECK-LABEL: sil @sink_retain_accross_count
// CHECK:({{.*}} : $Int, {{.*}} : $_NSArrayCoreType, [[NO:%.*]] : $Builtin.NativeObject
// CHECK-NOT: strong_retain [[NO]]
// CHECK: [[EXIST:%.*]] = open_existential_ref
// CHECK-NOT: strong_retain [[NO]]
// CHECK: witness_method
// CHECK-NOT: strong_retain [[NO]]
// CHECK: apply
// CHECK-NOT: strong_retain [[NO]]
// CHECK: strong_release [[EXIST]]

sil @sink_retain_accross_count : $@thin (Int, @owned _NSArrayCoreType, Builtin.NativeObject) -> Int {
bb0(%0 : $Int, %1: $_NSArrayCoreType, %2 : $Builtin.NativeObject):
  strong_retain %2: $Builtin.NativeObject
  %5 = open_existential_ref %1 : $_NSArrayCoreType to $@opened("CCAF1BA2-C8E4-11E4-9C38-C82A1428F987") _NSArrayCoreType
  %6 = witness_method [volatile] $@opened("CCAF1BA2-C8E4-11E4-9C38-C82A1428F987") _NSArrayCoreType, #_NSArrayCoreType.count!getter.1.foreign, %5 : $@opened("CCAF1BA2-C8E4-11E4-9C38-C82A1428F987") _NSArrayCoreType : $@cc(objc_method) @thin <τ_0_0 where τ_0_0 : _NSArrayCoreType> (τ_0_0) -> Int // user: %21
  %7 = apply %6<@opened("CCAF1BA2-C8E4-11E4-9C38-C82A1428F987") _NSArrayCoreType>(%5) : $@cc(objc_method) @thin <τ_0_0 where τ_0_0 : _NSArrayCoreType> (τ_0_0) -> Int
  strong_release %2: $Builtin.NativeObject
  strong_release %5 : $@opened("CCAF1BA2-C8E4-11E4-9C38-C82A1428F987") _NSArrayCoreType
  return %7 : $Int
}
