// RUN: %target-sil-opt %s -mandatory-inlining -verify

import Builtin
import Swift

sil @test_circular_foo : $@thin (Float32) -> Float32 {
bb0(%0 : $Float32):
  %3 = function_ref @test_circular_bar : $@thin (Float32) -> Float32
  %5 = apply [transparent] %3(%0) : $@thin (Float32) -> Float32 // expected-error {{inlining 'transparent' functions forms circular loop}} expected-note 2 {{while inlining here}}
  return %5 : $Float32
}

sil @test_circular_bar : $@thin (Float32) -> Float32 {
bb0(%0 : $Float32):
  %3 = function_ref @test_circular_baz : $@thin (Float32) -> Float32
  %5 = apply [transparent] %3(%0) : $@thin (Float32) -> Float32 // expected-error {{inlining 'transparent' functions forms circular loop}} expected-note 2 {{while inlining here}}
  return %5 : $Float32
}

sil @test_circular_baz : $@thin (Float32) -> Float32 {
bb0(%0 : $Float32):
  %3 = function_ref @test_circular_foo : $@thin (Float32) -> Float32
  %5 = apply [transparent] %3(%0) : $@thin (Float32) -> Float32 // expected-error {{inlining 'transparent' functions forms circular loop}} expected-note 2 {{while inlining here}}
  return %5 : $Float32
}

