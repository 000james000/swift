// RUN: %sil-opt %s -early-inline -sil-inline-threshold=50 -verify | FileCheck %s
sil_stage canonical

import Builtin
import Swift

sil [semantics "no_inline_plz"] @callee_func : $@thin () -> Int {
bb0:
  %0 = integer_literal $Builtin.Word, 3           // user: %1
  %1 = struct $Int (%0 : $Builtin.Word)           // user: %2
  return %1 : $Int                                // id: %2
}

//CHECK-LABLE: caller_func
//CHECK: function_ref
//CHECK: apply
//CHECK-NEXT: ret
sil @caller_func : $@thin () -> Int {
bb0:
  %0 = function_ref @callee_func : $@thin () -> Int // user: %1
  %1 = apply %0() : $@thin () -> Int              // user: %2
  return %1 : $Int                                // id: %2
}

// A function annocated with the @effects(readonly) attribute.
sil [readonly] @callee_func2 : $@thin () -> Int {
bb0:
  %0 = integer_literal $Builtin.Word, 3           // user: %1
  %1 = struct $Int (%0 : $Builtin.Word)           // user: %2
  return %1 : $Int                                // id: %2
}

//CHECK-LABLE: caller_func1
//CHECK: function_ref
//CHECK: apply
//CHECK-NEXT: ret
sil @caller_func1 : $@thin () -> Int {
bb0:
  %0 = function_ref @callee_func2 : $@thin () -> Int // user: %1
  %1 = apply %0() : $@thin () -> Int              // user: %2
  return %1 : $Int                                // id: %2
}

