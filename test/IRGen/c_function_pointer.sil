// RUN: %target-swift-frontend -emit-ir %s | FileCheck %s

// REQUIRES: CPU=i386_or_x86_64

import Swift

// CHECK-LABEL: define void @c_function_pointer(void ()*)
sil @c_function_pointer : $@convention(c) (CFunctionPointer<() -> ()>) -> () {
entry(%f : $CFunctionPointer<() -> ()>):
  return undef : $()
}

// CHECK-LABEL: define void @c_native_function_pointer(void ()*)
sil @c_native_function_pointer : $@convention(c) (@convention(c) () -> ()) -> () {
entry(%f : $@convention(c) () -> ()):
  return undef : $()
}

// CHECK-LABEL: define void @call_with_c_function_pointer(i8*)
sil @call_with_c_function_pointer : $@convention(thin) (CFunctionPointer<() -> ()>) -> () {
entry(%f : $CFunctionPointer<() -> ()>):
  %c = function_ref @c_function_pointer : $@convention(c) (CFunctionPointer<() -> ()>) -> ()
  %z = apply %c(%f) : $@convention(c) (CFunctionPointer<() -> ()>) -> ()
  return %z : $()
}

// CHECK-LABEL: define void @call_with_native_c_function_pointer(i8*)
sil @call_with_native_c_function_pointer : $@convention(thin) (@convention(c) () -> ()) -> () {
entry(%f : $@convention(c) () -> ()):
  %c = function_ref @c_native_function_pointer : $@convention(c) (@convention(c) () -> ()) -> ()
  %z = apply %c(%f) : $@convention(c) (@convention(c) () -> ()) -> ()
  return %z : $()
}
