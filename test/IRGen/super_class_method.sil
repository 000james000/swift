// RUN: %target-swift-frontend -emit-ir %s | FileCheck %s

sil_stage canonical

import Builtin
import Swift
import SwiftShims

public class Parent {
  public class func foo() {}
}

public class Child : Parent {}

public class Grandchild : Child {
  override public class func foo() {
    super.foo()
  }
}

// static test2.Parent.foo () -> ()
sil @_TZFC5test26Parent3foofT_T_ : $@convention(thin) (@thick Parent.Type) -> () {
// %0                                             // user: %1
bb0(%0 : $@thick Parent.Type):
  debug_value %0 : $@thick Parent.Type  // let self // id: %1
  %2 = tuple ()                                   // user: %3
  return %2 : $()                                 // id: %3
}

// static test2.Grandchild.foo () -> ()
sil @_TZFC5test210Grandchild3foofT_T_ : $@convention(thin) (@thick Grandchild.Type) -> () {
// %0                                             // users: %1, %2
bb0(%0 : $@thick Grandchild.Type):
  debug_value %0 : $@thick Grandchild.Type  // let self // id: %1
  %2 = upcast %0 : $@thick Grandchild.Type to $@thick Child.Type // user: %3
  %3 = upcast %2 : $@thick Child.Type to $@thick Parent.Type // user: %5
  %4 = super_method %0 : $@thick Grandchild.Type, #Parent.foo!1 : (Parent.Type) -> () -> (), $@convention(thin) (@thick Parent.Type) -> () // user: %5
  %5 = apply %4(%3) : $@convention(thin) (@thick Parent.Type) -> ()
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7
}

sil_vtable Parent {
  #Parent.foo!1: _TZFC5test26Parent3foofT_T_	// static test2.Parent.foo () -> ()
}

sil_vtable Child {
  #Parent.foo!1: _TZFC5test26Parent3foofT_T_	// static test2.Parent.foo () -> ()
}

sil_vtable Grandchild {
  #Parent.foo!1: _TZFC5test210Grandchild3foofT_T_	// static test2.Grandchild.foo () -> ()
}


// CHECK-LABEL: define void @_TZFC5test210Grandchild3foofT_T_(%swift.type*) #0
// CHECK: [[OPAQUE_GRANDCHILD:%[0-9]+]] = bitcast %swift.type* %0 to %swift.type**
// CHECK: [[SUPER_METADATA_PTR:%[0-9]+]] = getelementptr inbounds %swift.type*, %swift.type** [[OPAQUE_GRANDCHILD]], i32 1
// CHECK: [[SUPER_METADATA:%[0-9]+]] = load %swift.type*, %swift.type** [[SUPER_METADATA_PTR]]
// CHECK: [[FOO_VTABLE_SLOT:%[0-9]+]] = getelementptr inbounds void (%swift.type*)*, void (%swift.type*)**
// CHECK: [[FOO_FNPTR:%[0-9]+]] = load void (%swift.type*)*, void (%swift.type*)** [[FOO_VTABLE_SLOT]]
// CHECK: call void
