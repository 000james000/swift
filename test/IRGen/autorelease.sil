// RUN: rm -rf %t/clang-module-cache
// RUN: %target-build-swift -Xfrontend %clang-importer-sdk -module-cache-path %t/clang-module-cache %s -emit-ir | FileCheck -check-prefix=%target-cpu %s

// rdar://16565958

import Builtin
import Swift

// x86_64: [[OBJC:%objc_object]] = type
// armv7:  [[OBJC:%objc_object]] = type
// arm64:  [[OBJC:%objc_object]] = type
// i386:   [[OBJC:%objc_object]] = type

class C {}
sil @_TFC11autorelease1Cd : $@cc(method) @thin (@owned C) -> @owned Builtin.ObjectPointer {
bb0(%0 : $C):
  %1 = ref_to_object_pointer %0 : $C to $Builtin.ObjectPointer // user: %2
  return %1 : $Builtin.ObjectPointer              // id: %2
}

sil @foo : $@thin (@owned C?) -> @autoreleased C? {
bb0(%0 : $C?):
  autorelease_return %0 : $C?
}
// x86_64:    define i64 @foo(i64) {
// x86_64:      [[T0:%.*]] = tail call i64 bitcast ([[OBJC]]* ([[OBJC]]*)* @objc_autoreleaseReturnValue to i64 (i64)*)(i64 %0)
// x86_64-NEXT: ret i64 [[T0]]

// i386:     define i32 @foo(i32) {
// i386:       [[T0:%.*]] = tail call i32 bitcast ([[OBJC]]* ([[OBJC]]*)* @objc_autoreleaseReturnValue to i32 (i32)*)(i32 %0)
// i386-NEXT:  ret i32 [[T0]]

// arm64:    define i64 @foo(i64) {
// arm64:      [[T0:%.*]] = tail call i64 bitcast ([[OBJC]]* ([[OBJC]]*)* @objc_autoreleaseReturnValue to i64 (i64)*)(i64 %0)
// arm64-NEXT: ret i64 [[T0]]

// armv7:    define i32 @foo(i32) {
// armv7:      [[T0:%.*]] = tail call i32 bitcast ([[OBJC]]* ([[OBJC]]*)* @objc_autoreleaseReturnValue to i32 (i32)*)(i32 %0)
// armv7-NEXT: ret i32 [[T0]]


sil @bar : $@thin (@owned C?) -> @owned C? {
bb0(%0 : $C?):
  %1 = function_ref @foo : $@thin (@owned C?) -> @autoreleased C?
  %2 = apply %1(%0) : $@thin (@owned C?) -> @autoreleased C?
  strong_retain_autoreleased %2 : $C?
  return %2 : $C?
}
// x86_64:    define i64 @bar(i64)
// x86_64:      [[T0:%.*]] = call i64 @foo(i64 %0)
// x86_64-NEXT: [[T1:%.*]] = call i64 bitcast ([[OBJC]]* ([[OBJC]]*)* @objc_retainAutoreleasedReturnValue to i64 (i64)*)(i64 [[T0]])
// x86_64-NEXT: ret i64 [[T1]]

// i386:    define i32 @bar(i32)
// i386:      [[T0:%.*]] = call i32 @foo(i32 %0)
// i386-NEXT: [[T1:%.*]] = call i32 bitcast ([[OBJC]]* ([[OBJC]]*)* @objc_retainAutoreleasedReturnValue to i32 (i32)*)(i32 [[T0]])
// i386-NEXT: ret i32 [[T1]]

// arm64:    define i64 @bar(i64)
// arm64:      [[T0:%.*]] = call i64 @foo(i64 %0)
// arm64-NEXT: call void asm sideeffect "mov
// arm64-NEXT: [[T1:%.*]] = call i64 bitcast ([[OBJC]]* ([[OBJC]]*)* @objc_retainAutoreleasedReturnValue to i64 (i64)*)(i64 [[T0]])
// arm64-NEXT: ret i64 [[T1]]

// armv7:    define i32 @bar(i32)
// armv7:      [[T0:%.*]] = call i32 @foo(i32 %0)
// armv7-NEXT: call void asm sideeffect "mov
// armv7-NEXT: [[T1:%.*]] = call i32 bitcast ([[OBJC]]* ([[OBJC]]*)* @objc_retainAutoreleasedReturnValue to i32 (i32)*)(i32 [[T0]])
// armv7-NEXT: ret i32 [[T1]]
