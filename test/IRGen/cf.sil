// RUN: rm -rf %t/clang-module-cache
// RUN: %swift -target x86_64-apple-macosx10.9 -module-cache-path %t/clang-module-cache -sdk %S/Inputs %s -emit-ir -import-cf-types | FileCheck %s

// CHECK: [[TYPE:%swift.type]] = type
// CHECK: [[REFRIGERATOR:%CSo14CCRefrigerator]] = type
// CHECK: [[OBJC:%objc_object]] = type

// CHECK: [[REFRIGERATOR_NAME:@.*]] = private unnamed_addr constant [20 x i8] c"CSo14CCRefrigerator\00"

// CHECK: @_TMdCSo14CCRefrigerator = linkonce_odr hidden global { i8**, i64, i8*, [[TYPE]]*, i64, [[TYPE]]*, i8*, i8*, i8* } { i8** @_TWVBO, i64 16, i8* getelementptr inbounds ([20 x i8]* [[REFRIGERATOR_NAME]], i64 0, i64 0), [[TYPE]]* null, i64 0, [[TYPE]]* null, i8* null, i8* null, i8* null }

sil_stage canonical

import CoreCooling
import Swift

sil public_external @generic_function : $@thin <T where T : AnyObject> (@owned T) -> ()

sil @call_generic : $@thin (@owned CCRefrigerator) -> () {
bb0(%0 : $CCRefrigerator):
  %1 = function_ref @generic_function : $@thin <τ_0_0 where τ_0_0 : AnyObject> (@owned τ_0_0) -> ()
  %2 = apply %1<CCRefrigeratorRef>(%0) : $@thin <τ_0_0 where τ_0_0 : AnyObject> (@owned τ_0_0) -> ()
  %3 = tuple ()
  return %3 : $()
}

// CHECK:    define void @call_generic([[REFRIGERATOR]]*) {
// CHECK:      [[T0:%.*]] = bitcast [[REFRIGERATOR]]* %0 to [[OBJC]]*
// CHECK-NEXT: [[T1:%.*]] = call [[TYPE]]* @_TMaCSo14CCRefrigerator()
// CHECK-NEXT: call void @generic_function([[OBJC]]* [[T0]], [[TYPE]]* [[T1]])
// CHECK-NEXT: ret void

// CHECK:    define linkonce_odr hidden [[TYPE]]* @_TMaCSo14CCRefrigerator()
// CHECK:      call [[TYPE]]* @swift_getForeignTypeMetadata([[TYPE]]* bitcast (i8* getelementptr inbounds (i8* bitcast ({{.*}}* @_TMdCSo14CCRefrigerator to i8*), i64 8) to [[TYPE]]*))