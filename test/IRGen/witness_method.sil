// RUN: %swift -target x86_64-apple-darwin10 %s -emit-ir | FileCheck %s

sil_stage canonical

protocol DefCon {
  init()
}


// CHECK-LABEL: define void @defcon(%swift.opaque* noalias sret, %swift.type*, %swift.type* %T, i8** %T.DefCon) {
sil @defcon : $@thin <T: DefCon> (@out T, @thick T.Type) -> () {
entry(%0: $*T, %1: $@thick T.Type):

  // CHECK: [[WITNESS:%.*]] = load i8** %T.DefCon, align 8
  // CHECK: [[METHOD:%.*]] = bitcast i8* [[WITNESS]] to void (%swift.opaque*, %swift.type*, %swift.type*)*
  // CHECK: call void [[METHOD]]
  %m = witness_method $T, #DefCon.init!allocator.1 : $@thin @cc(witness_method) <U: DefCon> (@out U, @thick U.Type) -> ()
  %z = apply %m<V = T>(%0, %1) : $@thin @cc(witness_method) <V: DefCon> (@out V, @thick V.Type) -> ()
  return %z : $()
}
