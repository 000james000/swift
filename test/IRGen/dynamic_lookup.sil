// RUN: %swift -emit-llvm -triple=x86_64-apple-darwin10 %s | FileCheck %s

import swift
import Builtin 

class X {
  @objc def f() { }
  @objc static def g() { }
  @objc var value : Int { 
    return 17
  }

  @objc subscript (i : Int) -> Int {
  get:
    return i
  }
}

// [objc] t.X.f (t.X)() -> ()
sil @_TToC14dynamic_lookup1X1ffS0_FT_T_ : $@cc(objc_method) @thin ((), X) -> () {
bb0(%0 : $X):
  %3 = tuple ()
  return %3 : $()
}

// [objc] X.g (ObjectiveC.X.metatype)() -> ()
sil @_TToC14dynamic_lookup1X1gfMS0_FT_T_ : $@thin ((), X.metatype) -> () {
bb0(%0 : $X.metatype):
  %14 = tuple ()                                  // user: %15
  return %14 : $()
}

sil @_TToC14dynamic_lookup1X9subscriptFT1iSi_Sig : $@cc(objc_method) @thin ((), (i : Int64), X) -> Int64 {
bb0(%0 : $Int64, %1 : $X):
  %4 = function_ref @_TSi33_convertFromBuiltinIntegerLiteralfMSiFT3valBi64__Si : $@thin ((val : Builtin.Int64), Int64.metatype) -> Int64 // user: %7
  %5 = metatype $Int64.metatype                   // user: %7
  %6 = integer_literal $Builtin.Int64, 5          // user: %7
  %7 = apply [transparent] %4(%6, %5) : $@thin ((val : Builtin.Int64), Int64.metatype) -> Int64 // user: %9
  return %7 : $Int64
}

sil @_TSi33_convertFromBuiltinIntegerLiteralfMSiFT3valBi64__Si : $@thin ((val : Builtin.Int64), Int64.metatype) -> Int64

// [objc] dynamic_lookup.X.value.getter : swift.Int64
sil @_TToC14dynamic_lookup1X5valueSig : $@cc(objc_method) @thin ((), X) -> Int64 {
bb0(%0 : $X):
  %4 = function_ref @_TSi33_convertFromBuiltinIntegerLiteralfMSiFT3valBi64__Si : $@thin ((val : Builtin.Int64), Int64.metatype) -> Int64 // user: %7
  %5 = metatype $Int64.metatype                   // user: %7
  %6 = integer_literal $Builtin.Int64, 5          // user: %7
  %7 = apply [transparent] %4(%6, %5) : $@thin ((val : Builtin.Int64), Int64.metatype) -> Int64 // user: %9
  return %7 : $Int64
}

// CHECK: define void @dynamic_lookup_br(%objc_object*)
sil @dynamic_lookup_br : $@thin (obj : DynamicLookup) -> () {
bb0(%0 : $DynamicLookup):
  %1 = alloc_box $DynamicLookup                   
  store %0 to %1#1 : $*DynamicLookup
  %3 = alloc_box $Optional<() -> ()>              
  %4 = load %1#1 : $*DynamicLookup                
  strong_retain %4 : $DynamicLookup
  %6 = project_existential_ref %4 : $DynamicLookup to $@sil_self DynamicLookup
  %7 = ref_to_object_pointer %6 : $@sil_self DynamicLookup to $Builtin.ObjCPointer

  // CHECK: [[SEL:%[0-9]+]] = load i8** @"\01L_selector(f)", align 8
  // CHECK: [[HAS_SEL:%[0-9]]] = call i1 @swift_objcRespondsToSelector(%objc_object* [[OBJECT:%[0-9]+]], i8* [[SEL]]) #0
  // CHECK: br i1 [[HAS_SEL]]
  dynamic_method_br %7 : $Builtin.ObjCPointer, #X.f!1, bb1, bb2

bb1(%8 : $@cc(objc_method) @thin ((), Builtin.ObjCPointer) -> ()):
  br bb3

bb2:
  br bb3

bb3:
  %43 = tuple ()
  return %43 : $()
}

// CHECK: define void @dynamic_lookup_static_br(%swift.type*)
sil @dynamic_lookup_static_br : $@thin (objMeta : DynamicLookup.metatype) -> () {
bb0(%0 : $DynamicLookup.metatype):
  // CHECK: [[SEL:%[0-9]+]] = load i8** @"\01L_selector(g)", align 8
  // CHECK: [[HAS_SEL:%[0-9]]] = call i1 @swift_objcRespondsToSelector(%objc_object* [[OBJECT:%[0-9]+]], i8* [[SEL]]) #0
  // CHECK: br i1 [[HAS_SEL]]
  dynamic_method_br %0 : $DynamicLookup.metatype, #X.g!1, bb1, bb2

bb1(%8 : $@cc(objc_method) @thin ((), Builtin.ObjCPointer) -> ()):
  br bb3

bb2:
  br bb3

bb3:
  %43 = tuple ()
  return %43 : $()
}

sil @_T1t23dynamic_lookup_propertyFT1xPSo13DynamicLookup__T_ : $@thin (x : DynamicLookup) -> () {
  bb0(%0 : $DynamicLookup):
  %1 = alloc_box $DynamicLookup
  store %0 to %1#1 : $*DynamicLookup
  %6 = load %1#1 : $*DynamicLookup                // users: %24, %8, %7
  strong_retain %6 : $DynamicLookup
  %8 = project_existential_ref %6 : $DynamicLookup to $@sil_self DynamicLookup // users: %11, %9
  %9 = ref_to_object_pointer %8 : $@sil_self DynamicLookup to $Builtin.ObjCPointer
  dynamic_method_br %9 : $Builtin.ObjCPointer, #X.value!getter.1.foreign, bb1, bb2

bb1(%10 : $@cc(objc_method) @thin ((), Builtin.ObjCPointer) -> Int64):
  br bb3

bb2:
  br bb3

bb3:
  %43 = tuple ()
  return %43 : $()  
}

// CHECK-LABEL: define void @_T1t16opt_to_subscriptFT3objPSo13DynamicLookup_1iSi_T_(%objc_object*, i64)
sil @_T1t16opt_to_subscriptFT3objPSo13DynamicLookup_1iSi_T_ : $@thin (obj : DynamicLookup, i : Int64) -> () {
bb0(%0 : $DynamicLookup, %1 : $Int64):
  %2 = alloc_box $DynamicLookup
  %3 = alloc_box $Int64
  store %0 to %2#1 : $*DynamicLookup
  store %1 to %3#1 : $*Int64
  %8 = load %2#1 : $*DynamicLookup
  strong_retain %8 : $DynamicLookup
  %10 = project_existential_ref %8 : $DynamicLookup to $@sil_self DynamicLookup
  %11 = ref_to_object_pointer %10 : $@sil_self DynamicLookup to $Builtin.ObjCPointer
  // CHECK: [[SEL:%[0-9]+]] = load i8** @"\01L_selector(objectAtIndexedSubscript:)", align 8
  // CHECK-NEXT: [[HAS_SEL:%[0-9]+]] = call i1 @swift_objcRespondsToSelector(%objc_object* %0, i8* [[SEL]]) #0
  // CHECK-NEXT: br i1 [[HAS_SEL]], label [[HAS_METHOD:%[0-9]+]], label [[HAS_METHOD:%[0-9]+]]

  dynamic_method_br %11 : $Builtin.ObjCPointer, #X.subscript!getter.2.foreign, bb1, bb2

bb1(%13 : $@cc(objc_method) @thin ((), (i : Int64), Builtin.ObjCPointer) -> Int64): // Preds: bb0
  %14 = partial_apply %13(%11) : $@cc(objc_method) @thin ((), (i : Int64), Builtin.ObjCPointer) -> Int64
  %15 = load %3#1 : $*Int64             
  %16 = apply %14(%15) : $Int64 -> Int64
  br bb3

bb2:
  br bb3

bb3:
  %30 = tuple ()
  return %30 : $()
}

sil @top_level_code : $@thin () -> () {
  %0 = tuple ()
  %1 = return %0 : $()
}
