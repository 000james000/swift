// RUN: %swift -emit-llvm -triple=x86_64-apple-darwin10 %s | FileCheck %s

// CHECK: [[REF:%swift.refcounted]] = type
// CHECK: [[C:%C7unowned1C]] = type { [[REF]] }
// CHECK: [[UNKNOWN:%objc_object]] = type opaque

class C {}
protocol [class_protocol] P {
  func explode()
}

sil @test_weak_rr_class : $[thin] (ref : [unowned] C) -> () {
bb0(%0 : $[unowned] C):
  %1 = unowned_retain %0 : $[unowned] C
  %2 = unowned_release %0 : $[unowned] C
  %3 = tuple ()
  %4 = return %3 : $()
}
// CHECK:    define void @test_weak_rr_class([[C]]*) {
// CHECK:      call void bitcast (void ([[REF]]*)* @swift_weakRetain to void ([[C]]*)*)([[C]]* %0)
// CHECK-NEXT: call void bitcast (void ([[REF]]*)* @swift_weakRelease to void ([[C]]*)*)([[C]]* %0)
// CHECK-NEXT: ret void

sil @test_weak_rr_proto : $[thin] (ref : [unowned] P) -> () {
bb0(%0 : $[unowned] P):
  %1 = unowned_retain %0 : $[unowned] P
  %2 = unowned_release %0 : $[unowned] P
  %3 = tuple ()
  %4 = return %3 : $()
}
// CHECK:    define void @test_weak_rr_proto(i8**, [[UNKNOWN]]*) {
// CHECK:      call void bitcast (void ([[REF]]*)* @swift_unknownWeakRetain to void ([[UNKNOWN]]*)*)([[UNKNOWN]]* %1)
// CHECK:      call void bitcast (void ([[REF]]*)* @swift_unknownWeakRelease to void ([[UNKNOWN]]*)*)([[UNKNOWN]]* %1)
// CHECK-NEXT: ret void

sil @top_level_code : $[thin] () -> () {
  %0 = tuple ()
  %1 = return %0 : $()
}
