// RUN: %swift -emit-llvm -triple=x86_64-apple-darwin10 %s | FileCheck %s

// CHECK: [[OPAQUE:%swift.opaque]] = type opaque
// CHECK: [[TYPE:%swift.type]] = type
// CHECK: [[REF:%swift.refcounted]] = type
// CHECK: [[C:%C7unowned1C]] = type <{ [[REF]] }>
// CHECK: [[UNKNOWN:%objc_object]] = type opaque
// CHECK: [[A:%V7unowned1A]] = type <{ [[C]]* }>

class C {}
protocol [class_protocol] P {
  func explode()
}

struct A {
  var [unowned] x : C
}

sil @test_weak_rr_class : $[thin] (ref : [unowned] C) -> () {
bb0(%0 : $[unowned] C):
  %1 = unowned_retain %0 : $[unowned] C
  %2 = unowned_release %0 : $[unowned] C
  %3 = tuple ()
  %4 = return %3 : $()
}
// CHECK:    define void @test_weak_rr_class([[C]]*) {
// CHECK:      call void bitcast (void ([[REF]]*)* @swift_weakRetain to void ([[C]]*)*)([[C]]* %0)
// CHECK-NEXT: call void bitcast (void ([[REF]]*)* @swift_weakRelease to void ([[C]]*)*)([[C]]* %0)
// CHECK-NEXT: ret void

sil @test_weak_rr_proto : $[thin] (ref : [unowned] P) -> () {
bb0(%0 : $[unowned] P):
  %1 = unowned_retain %0 : $[unowned] P
  %2 = unowned_release %0 : $[unowned] P
  %3 = tuple ()
  %4 = return %3 : $()
}
// CHECK:    define void @test_weak_rr_proto(i8**, [[UNKNOWN]]*) {
// CHECK:      call void bitcast (void ([[REF]]*)* @swift_unknownWeakRetain to void ([[UNKNOWN]]*)*)([[UNKNOWN]]* %1)
// CHECK:      call void bitcast (void ([[REF]]*)* @swift_unknownWeakRelease to void ([[UNKNOWN]]*)*)([[UNKNOWN]]* %1)
// CHECK-NEXT: ret void

sil @top_level_code : $[thin] () -> () {
  %0 = tuple ()
  %1 = return %0 : $()
}

// Value witnesses for A:

//   destroyBuffer
// CHECK:    define linkonce_odr hidden void @_TwXXV7unowned1A([[BUFFER:\[24 x i8\]]]* [[ARG:%.*]], [[TYPE]]*
// CHECK:      [[T0:%.*]] = bitcast [[BUFFER]]* [[ARG]] to [[A]]*
// CHECK-NEXT: [[T1:%.*]] = getelementptr inbounds [[A]]* [[T0]], i32 0, i32 0
// CHECK-NEXT: [[T2:%.*]] = load [[C]]** [[T1]], align 8
// CHECK-NEXT: call void bitcast (void ([[REF]]*)* @swift_weakRelease to void ([[C]]*)*)([[C]]* [[T2]])
// CHECK-NEXT: ret void

//   initializeBufferWithCopyOfBuffer
// CHECK:    define linkonce_odr hidden [[OPAQUE]]* @_TwCPV7unowned1A([[BUFFER]]* [[DESTBUF:%.*]], [[BUFFER]]* [[SRCBUF:%.*]], [[TYPE]]*
// CHECK:      [[DEST:%.*]] = bitcast [[BUFFER]]* [[DESTBUF]] to [[A]]*
// CHECK-NEXT: [[SRC:%.*]] = bitcast [[BUFFER]]* [[SRCBUF]] to [[A]]*
// CHECK-NEXT: [[T0:%.*]] = getelementptr inbounds [[A]]* [[DEST]], i32 0, i32 0
// CHECK-NEXT: [[T1:%.*]] = getelementptr inbounds [[A]]* [[SRC]], i32 0, i32 0
// CHECK-NEXT: [[T2:%.*]] = load [[C]]** [[T1]], align 8
// CHECK-NEXT: call void bitcast (void ([[REF]]*)* @swift_weakRetain to void ([[C]]*)*)([[C]]* [[T2]])
// CHECK-NEXT: store [[C]]* [[T2]], [[C]]** [[T0]], align 8
// CHECK-NEXT: [[T0:%.*]] = bitcast [[A]]* [[DEST]] to [[OPAQUE]]*
// CHECK-NEXT: ret [[OPAQUE]]* [[T0]]

//   destroy
// CHECK:    define linkonce_odr hidden void @_TwxxV7unowned1A([[OPAQUE]]* [[ARG:%.*]], [[TYPE]]*
// CHECK:      [[T0:%.*]] = bitcast [[OPAQUE]]* [[ARG]] to [[A]]*
// CHECK-NEXT: [[T1:%.*]] = getelementptr inbounds [[A]]* [[T0]], i32 0, i32 0
// CHECK-NEXT: [[T2:%.*]] = load [[C]]** [[T1]], align 8
// CHECK-NEXT: call void bitcast (void ([[REF]]*)* @swift_weakRelease to void ([[C]]*)*)([[C]]* [[T2]])
// CHECK-NEXT: ret void

//   initializeBufferWithCopy
// CHECK:    define linkonce_odr hidden [[OPAQUE]]* @_TwCpV7unowned1A([[BUFFER]]* [[DESTBUF:%.*]], [[OPAQUE]]* [[SRC_OPQ:%.*]], [[TYPE]]*
// CHECK:      [[SRC:%.*]] = bitcast [[OPAQUE]]* [[SRC_OPQ]] to [[A]]*
// CHECK-NEXT: [[DEST:%.*]] = bitcast [[BUFFER]]* [[DESTBUF]] to [[A]]*
// CHECK-NEXT: [[T0:%.*]] = getelementptr inbounds [[A]]* [[DEST]], i32 0, i32 0
// CHECK-NEXT: [[T1:%.*]] = getelementptr inbounds [[A]]* [[SRC]], i32 0, i32 0
// CHECK-NEXT: [[T2:%.*]] = load [[C]]** [[T1]], align 8
// CHECK-NEXT: call void bitcast (void ([[REF]]*)* @swift_weakRetain to void ([[C]]*)*)([[C]]* [[T2]])
// CHECK-NEXT: store [[C]]* [[T2]], [[C]]** [[T0]], align 8
// CHECK-NEXT: [[T0:%.*]] = bitcast [[A]]* [[DEST]] to [[OPAQUE]]*
// CHECK-NEXT: ret [[OPAQUE]]* [[T0]]

//   initializeWithCopy
// CHECK:    define linkonce_odr hidden [[OPAQUE]]* @_TwcpV7unowned1A([[OPAQUE]]* [[DEST_OPQ:%.*]], [[OPAQUE]]* [[SRC_OPQ:%.*]], [[TYPE]]*
// CHECK:      [[DEST:%.*]] = bitcast [[OPAQUE]]* [[DEST_OPQ]] to [[A]]*
// CHECK-NEXT: [[SRC:%.*]] = bitcast [[OPAQUE]]* [[SRC_OPQ]] to [[A]]*
// CHECK-NEXT: [[T0:%.*]] = getelementptr inbounds [[A]]* [[DEST]], i32 0, i32 0
// CHECK-NEXT: [[T1:%.*]] = getelementptr inbounds [[A]]* [[SRC]], i32 0, i32 0
// CHECK-NEXT: [[T2:%.*]] = load [[C]]** [[T1]], align 8
// CHECK-NEXT: call void bitcast (void ([[REF]]*)* @swift_weakRetain to void ([[C]]*)*)([[C]]* [[T2]])
// CHECK-NEXT: store [[C]]* [[T2]], [[C]]** [[T0]], align 8
// CHECK-NEXT: [[T0:%.*]] = bitcast [[A]]* [[DEST]] to [[OPAQUE]]*
// CHECK-NEXT: ret [[OPAQUE]]* [[T0]]

//   assignWithCopy
// CHECK:    define linkonce_odr hidden [[OPAQUE]]* @_TwcaV7unowned1A([[OPAQUE]]* [[DEST_OPQ:%.*]], [[OPAQUE]]* [[SRC_OPQ:%.*]], [[TYPE]]*
// CHECK:      [[DEST:%.*]] = bitcast [[OPAQUE]]* [[DEST_OPQ]] to [[A]]*
// CHECK-NEXT: [[SRC:%.*]] = bitcast [[OPAQUE]]* [[SRC_OPQ]] to [[A]]*
// CHECK-NEXT: [[DEST_X:%.*]] = getelementptr inbounds [[A]]* [[DEST]], i32 0, i32 0
// CHECK-NEXT: [[SRC_X:%.*]] = getelementptr inbounds [[A]]* [[SRC]], i32 0, i32 0
// CHECK-NEXT: [[NEW:%.*]] = load [[C]]** [[SRC_X]], align 8
// CHECK-NEXT: call void bitcast (void ([[REF]]*)* @swift_weakRetain to void ([[C]]*)*)([[C]]* [[NEW]])
// CHECK-NEXT: [[OLD:%.*]] = load [[C]]** [[DEST_X]], align 8
// CHECK-NEXT: store [[C]]* [[NEW]], [[C]]** [[DEST_X]], align 8
// CHECK-NEXT: call void bitcast (void ([[REF]]*)* @swift_weakRelease to void ([[C]]*)*)([[C]]* [[OLD]])
// CHECK-NEXT: [[T0:%.*]] = bitcast [[A]]* [[DEST]] to [[OPAQUE]]*
// CHECK-NEXT: ret [[OPAQUE]]* [[T0]]

//   assignWithTake
// CHECK:    define linkonce_odr hidden [[OPAQUE]]* @_TwtaV7unowned1A([[OPAQUE]]* [[DEST_OPQ:%.*]], [[OPAQUE]]* [[SRC_OPQ:%.*]], [[TYPE]]*
// CHECK:      [[DEST:%.*]] = bitcast [[OPAQUE]]* [[DEST_OPQ]] to [[A]]*
// CHECK-NEXT: [[SRC:%.*]] = bitcast [[OPAQUE]]* [[SRC_OPQ]] to [[A]]*
// CHECK-NEXT: [[DEST_X:%.*]] = getelementptr inbounds [[A]]* [[DEST]], i32 0, i32 0
// CHECK-NEXT: [[SRC_X:%.*]] = getelementptr inbounds [[A]]* [[SRC]], i32 0, i32 0
// CHECK-NEXT: [[NEW:%.*]] = load [[C]]** [[SRC_X]], align 8
// CHECK-NEXT: [[OLD:%.*]] = load [[C]]** [[DEST_X]], align 8
// CHECK-NEXT: store [[C]]* [[NEW]], [[C]]** [[DEST_X]], align 8
// CHECK-NEXT: call void bitcast (void ([[REF]]*)* @swift_weakRelease to void ([[C]]*)*)([[C]]* [[OLD]])
// CHECK-NEXT: [[T0:%.*]] = bitcast [[A]]* [[DEST]] to [[OPAQUE]]*
// CHECK-NEXT: ret [[OPAQUE]]* [[T0]]
