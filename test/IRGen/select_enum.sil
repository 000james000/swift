// RUN: %swift -emit-ir %s | FileCheck %s

import Builtin

enum Beth {
  case EmptyCase
  case DataCase(Builtin.Word)
}

// CHECK-LABEL: define void @select_enum(%O11select_enum4Beth* noalias)
sil @select_enum : $@thin (@in Beth) -> () {
bb0(%0 : $*Beth):
  %1 = load %0 : $*Beth
  %2 = integer_literal $Builtin.Int32, 2
  %3 = integer_literal $Builtin.Int32, 3

  // CHECK:   switch i1 [[TAG:%.*]], label %[[UNDEF:.*]] [
  // CHECK:     i1 false, label %[[SOME:[0-9]+]]
  // CHECK:     i1 true, label %[[EXTRA_INHAB:[0-9]+]]
  // CHECK:   ]
  // CHECK: ; <label>:[[EXTRA_INHAB]]
  // CHECK:   switch i64 [[PAYLOAD:%.*]], label %[[UNDEF]] [
  // CHECK:     i64 0, label %[[NONE:[0-9]+]]
  // CHECK:   ]
  // CHECK: ; <label>:[[UNDEF]]
  // CHECK:   unreachable
  // CHECK:   phi i32 [ 2, %[[NONE]] ], [ 3, %[[SOME]] ]
  %4 = select_enum %1 : $Beth, case #Beth.EmptyCase!enumelt: %2, case #Beth.DataCase!enumelt.1: %3 : $Builtin.Int32

  // CHECK:   switch i1 [[TAG:%.*]], label %[[UNDEF:.*]] [
  // CHECK:     i1 false, label %[[SOME:[0-9]+]]
  // CHECK:     i1 true, label %[[EXTRA_INHAB:[0-9]+]]
  // CHECK:   ]
  // CHECK: ; <label>:[[EXTRA_INHAB]]
  // CHECK:   switch i64 [[PAYLOAD:%.*]], label %[[UNDEF]] [
  // CHECK:     i64 0, label %[[NONE:[0-9]+]]
  // CHECK:   ]
  // CHECK: ; <label>:[[UNDEF]]
  // CHECK:   unreachable
  // CHECK:   phi i32 [ 2, %[[NONE]] ], [ 3, %[[SOME]] ]
  %5 = select_enum_addr %0 : $*Beth, case #Beth.EmptyCase!enumelt: %2, case #Beth.DataCase!enumelt.1: %3 : $Builtin.Int32

  // CHECK:   switch i1 [[TAG:%.*]], label %[[UNDEF:.*]] [
  // CHECK:     i1 false, label %[[SOME:[0-9]+]]
  // CHECK:     i1 true, label %[[EXTRA_INHAB:[0-9]+]]
  // CHECK:   ]
  // CHECK: ; <label>:[[EXTRA_INHAB]]
  // CHECK:   switch i64 [[PAYLOAD:%.*]], label %[[UNDEF]] [
  // CHECK:     i64 0, label %[[NONE:[0-9]+]]
  // CHECK:   ]
  // CHECK: ; <label>:[[UNDEF]]
  // CHECK:   unreachable
  // CHECK:   phi i32 [ 2, %[[NONE]] ], [ 3, %[[SOME]] ]
  %6 = select_enum %1 : $Beth, case #Beth.EmptyCase!enumelt: %2, default %3 : $Builtin.Int32

  return undef : $()
}

