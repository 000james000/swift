// RUN: %target-swift-frontend -emit-ir %s | FileCheck %s

sil_stage canonical

// CHECK: define void @public_fragile_function_test() {
// CHECK: define void @hidden_fragile_function_test() {
// CHECK: define linkonce_odr void @shared_fragile_function_test() {
// CHECK: define void @private_fragile_function_test() {
// CHECK: define linkonce_odr hidden void @public_external_fragile_function_def_test() {
// CHECK: define available_externally void @hidden_external_fragile_function_def_test() {
// CHECK: define linkonce_odr hidden void @shared_external_fragile_function_def_test() {
// CHECK: define available_externally void @private_external_fragile_function_def_test() {
// CHECK: define void @public_resilient_function_test() {
// CHECK: define hidden void @hidden_resilient_function_test() {
// CHECK: define linkonce_odr hidden void @shared_resilient_function_test() {
// CHECK: define internal void @private_resilient_function_test() {
// CHECK: define linkonce_odr hidden void @public_external_resilient_function_def_test() {
// CHECK: define available_externally hidden void @hidden_external_resilient_function_def_test() {
// CHECK: define linkonce_odr hidden void @shared_external_resilient_function_def_test() {

sil public [fragile] @public_fragile_function_test : $@thin () -> () {
  %0 = tuple()
  return %0 : $()
}

sil hidden [fragile] @hidden_fragile_function_test : $@thin () -> () {
  %0 = tuple()
  return %0 : $()
}

sil shared [fragile] @shared_fragile_function_test : $@thin () -> () {
  %0 = tuple()
  return %0 : $()
}

sil private [fragile] @private_fragile_function_test : $@thin () -> () {
  %0 = tuple()
  return %0 : $()
}

sil public_external [fragile] @public_external_fragile_function_def_test : $@thin () -> () {
  %0 = tuple()
  return %0 : $()
}

sil hidden_external [fragile] @hidden_external_fragile_function_def_test : $@thin () -> () {
  %0 = tuple()
  return %0 : $()
}

sil shared_external [fragile] @shared_external_fragile_function_def_test : $@thin () -> () {
  %0 = tuple()
  return %0 : $()
}

sil private_external [fragile] @private_external_fragile_function_def_test : $@thin () -> () {
  %0 = tuple()
  return %0 : $()
}

sil public_external [fragile] @public_external_fragile_function_decl_test : $@thin () -> ()

sil hidden_external [fragile] @hidden_external_fragile_function_decl_test : $@thin () -> ()

// 'shared' should always be a definition.
// sil shared_external [fragile] @shared_external_fragile_function_decl_test : $@thin () -> ()

// 'private' should always be a definition.
// sil private_external [fragile] @private_external_fragile_function_decl_test : $@thin () -> ()

sil public @public_resilient_function_test : $@thin () -> () {
  %0 = tuple()
  return %0 : $()
}

sil hidden @hidden_resilient_function_test : $@thin () -> () {
  %0 = tuple()
  return %0 : $()
}

sil shared @shared_resilient_function_test : $@thin () -> () {
  %0 = tuple()
  return %0 : $()
}

sil private @private_resilient_function_test : $@thin () -> () {
  %0 = tuple()
  return %0 : $()
}

sil public_external @public_external_resilient_function_def_test : $@thin () -> () {
  %0 = tuple()
  return %0 : $()
}

sil hidden_external @hidden_external_resilient_function_def_test : $@thin () -> () {
  %0 = tuple()
  return %0 : $()
}

sil shared_external @shared_external_resilient_function_def_test : $@thin () -> () {
  %0 = tuple()
  return %0 : $()
}

// 'private_external' should always be fragile.
// sil private_external @private_external_resilient_function_def_test : $@thin () -> () {
//   %0 = tuple()
//   return %0 : $()
// }

sil public_external @public_external_resilient_function_decl_test : $@thin () -> ()

sil hidden_external @hidden_external_resilient_function_decl_test : $@thin () -> ()

// 'shared' should always be a definition.
// sil shared_external @shared_external_resilient_function_decl_test : $@thin () -> ()

// 'private' should always be a definition.
// sil private_external @private_external_resilient_function_decl_test : $@thin () -> ()


sil public @use_all_symbols : $@thin () -> () {
  %0 = function_ref @public_fragile_function_test : $@thin () -> ()
  %1 = function_ref @hidden_fragile_function_test : $@thin () -> ()
  %2 = function_ref @shared_fragile_function_test : $@thin () -> ()
  %3 = function_ref @private_fragile_function_test : $@thin () -> ()
  %4 = function_ref @public_external_fragile_function_def_test : $@thin () -> ()
  %5 = function_ref @hidden_external_fragile_function_def_test : $@thin () -> ()
  %6 = function_ref @shared_external_fragile_function_def_test : $@thin () -> ()
  %7 = function_ref @private_external_fragile_function_def_test : $@thin () -> ()
  %8 = function_ref @public_external_fragile_function_decl_test : $@thin () -> ()
  %9 = function_ref @hidden_external_fragile_function_decl_test : $@thin () -> ()
  // %10 = function_ref @shared_external_fragile_function_decl_test : $@thin () -> ()
  // %11 = function_ref @private_external_fragile_function_decl_test : $@thin () -> ()
  %12 = function_ref @public_resilient_function_test : $@thin () -> ()
  %13 = function_ref @hidden_resilient_function_test : $@thin () -> ()
  %14 = function_ref @shared_resilient_function_test : $@thin () -> ()
  %15 = function_ref @private_resilient_function_test : $@thin () -> ()
  %16 = function_ref @public_external_resilient_function_def_test : $@thin () -> ()
  %17 = function_ref @hidden_external_resilient_function_def_test : $@thin () -> ()
  %18 = function_ref @shared_external_resilient_function_def_test : $@thin () -> ()
  // %19 = function_ref @private_external_resilient_function_def_test : $@thin () -> ()
  %20 = function_ref @public_external_resilient_function_decl_test : $@thin () -> ()
  %21 = function_ref @hidden_external_resilient_function_decl_test : $@thin () -> ()
  // %22 = function_ref @shared_external_resilient_function_decl_test : $@thin () -> ()
  // %23 = function_ref @private_external_resilient_function_decl_test : $@thin () -> ()

  apply %0() : $@thin () -> ()
  apply %1() : $@thin () -> ()
  apply %2() : $@thin () -> ()
  apply %3() : $@thin () -> ()
  apply %4() : $@thin () -> ()
  apply %5() : $@thin () -> ()
  apply %6() : $@thin () -> ()
  apply %7() : $@thin () -> ()
  apply %8() : $@thin () -> ()
  apply %9() : $@thin () -> ()
  // apply %10() : $@thin () -> ()
  // apply %11() : $@thin () -> ()
  apply %12() : $@thin () -> ()
  apply %13() : $@thin () -> ()
  apply %14() : $@thin () -> ()
  apply %15() : $@thin () -> ()
  apply %16() : $@thin () -> ()
  apply %17() : $@thin () -> ()
  apply %18() : $@thin () -> ()
  // apply %19() : $@thin () -> ()
  apply %20() : $@thin () -> ()
  apply %21() : $@thin () -> ()
  // apply %22() : $@thin () -> ()
  // apply %23() : $@thin () -> ()
  %24 = tuple()
  return %24 : $()
}

