// RUN: %target-swift-frontend(mock-sdk: %clang-importer-sdk) -emit-ir %s | FileCheck %s --check-prefix=%target-cpu

import Swift
import simd

// Work around rdar://problem/20577079 with a Swift function that touches all
// the fields of float4, forcing it to be validated.
func forceStuff(x: float4) -> (Float,Float,Float,Float) {
  return (x.x, x.y, x.z, x.w)
}

// x86_64-LABEL: define <4 x float> @simd_c_args(<4 x float>)
// i386-LABEL: define <2 x i64> @simd_c_args(<4 x float>)
// arm64-LABEL: define <4 x float> @simd_c_args(<4 x float>)
// armv7-LABEL: define <4 x float> @simd_c_args(<4 x float>)
// armv7s-LABEL: define <4 x float> @simd_c_args(<4 x float>)
// armv7k-LABEL: define <4 x float> @simd_c_args(<4 x float>)
sil @simd_c_args : $@convention(c) (float4) -> float4 {
entry(%x : $float4):
  return %x : $float4
}

// x86_64-LABEL: define void @simd_native_args(%V4simd6float4* noalias nocapture sret, %V4simd6float4* noalias nocapture dereferenceable({{.*}}))
// i386-LABEL: define void @simd_native_args(%V4simd6float4* noalias nocapture sret, %V4simd6float4* noalias nocapture dereferenceable({{.*}}))
// arm64-LABEL: define void @simd_native_args(%V4simd6float4* noalias nocapture sret, %V4simd6float4* noalias nocapture dereferenceable({{.*}}))
// armv7-LABEL: define void @simd_native_args(%V4simd6float4* noalias nocapture sret, %V4simd6float4* noalias nocapture dereferenceable({{.*}}))
// armv7s-LABEL: define void @simd_native_args(%V4simd6float4* noalias nocapture sret, %V4simd6float4* noalias nocapture dereferenceable({{.*}}))
// armv7k-LABEL: define void @simd_native_args(%V4simd6float4* noalias nocapture sret, %V4simd6float4* noalias nocapture dereferenceable({{.*}}))
sil @simd_native_args : $@convention(thin) (float4) -> float4 {
entry(%x : $float4):
  %f = function_ref @simd_c_args : $@convention(c) (float4) -> float4
  %y = apply %f(%x) : $@convention(c) (float4) -> float4
  return %y : $float4
}


