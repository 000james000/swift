// RUN: %target-swift-frontend(mock-sdk: %clang-importer-sdk) -emit-ir %s | FileCheck %s --check-prefix=%target-cpu

import Swift
import simd

// Work around rdar://problem/20577079 with a Swift function that touches all
// the fields of Float4, forcing it to be validated.
func forceStuff(x: Float4) -> (Float,Float,Float,Float) {
  return (x.x, x.y, x.z, x.w)
}

// x86_64-LABEL: define <4 x float> @simd_c_args(<4 x float>)
// i386-LABEL: define <2 x i64> @simd_c_args(<4 x float>)
// arm64-LABEL: define <4 x float> @simd_c_args(<4 x float>)
// armv7-LABEL: define <4 x float> @simd_c_args(<4 x float>)
// armv7s-LABEL: define <4 x float> @simd_c_args(<4 x float>)
// armv7k-LABEL: define <4 x float> @simd_c_args(<4 x float>)
sil @simd_c_args : $@convention(c) (Float4) -> Float4 {
entry(%x : $Float4):
  return %x : $Float4
}

// x86_64-LABEL: define void @simd_native_args(%V4simd6Float4* noalias sret, float, float, float, float)
// i386-LABEL: define void @simd_native_args(%V4simd6Float4* noalias sret, float, float, float, float)
// arm64-LABEL: define { float, float, float, float } @simd_native_args(float, float, float, float)
// armv7-LABEL: define void @simd_native_args(%V4simd6Float4* noalias sret, float, float, float, float)
// armv7s-LABEL: define void @simd_native_args(%V4simd6Float4* noalias sret, float, float, float, float)
// armv7k-LABEL: define void @simd_native_args(%V4simd6Float4* noalias sret, float, float, float, float)
sil @simd_native_args : $@convention(thin) (Float4) -> Float4 {
entry(%x : $Float4):
  %f = function_ref @simd_c_args : $@convention(c) (Float4) -> Float4
  %y = apply %f(%x) : $@convention(c) (Float4) -> Float4
  return %y : $Float4
}


