// RUN: %target-swift-frontend %s -emit-ir | FileCheck %s

// REQUIRES: CPU=x86_64

import Builtin

// Enums consisting of a retainable pointer and a single empty case use nullable
// pointer value semantics.
enum NullableRefcounted {
  case Ref(Builtin.NativeObject)
  case None
}

// CHECK-LABEL: define linkonce_odr hidden void @_TwxxO34enum_value_semantics_special_cases18NullableRefcounted(%swift.opaque* %object, %swift.type* %Self) {{.*}} {
// CHECK: entry:
// CHECK:   %0 = bitcast %swift.opaque* %object to %O34enum_value_semantics_special_cases18NullableRefcounted*
// CHECK:   %1 = bitcast %O34enum_value_semantics_special_cases18NullableRefcounted* %0 to %swift.refcounted**
// CHECK:   %2 = load %swift.refcounted*, %swift.refcounted** %1, align 8
// CHECK:   call void @swift_release(%swift.refcounted* %2) {{#[0-9]+}}
// CHECK:   ret void
// CHECK: }

// CHECK-LABEL: define linkonce_odr hidden %swift.opaque* @_TwcpO34enum_value_semantics_special_cases18NullableRefcounted(%swift.opaque* %dest, %swift.opaque* %src, %swift.type* %Self) {{.*}} {
// CHECK: entry:
// CHECK:   %0 = bitcast %swift.opaque* %dest to %O34enum_value_semantics_special_cases18NullableRefcounted*
// CHECK:   %1 = bitcast %swift.opaque* %src to %O34enum_value_semantics_special_cases18NullableRefcounted*
// CHECK:   %2 = bitcast %O34enum_value_semantics_special_cases18NullableRefcounted* %0 to %swift.refcounted**
// CHECK:   %3 = bitcast %O34enum_value_semantics_special_cases18NullableRefcounted* %1 to %swift.refcounted**
// CHECK:   %4 = load %swift.refcounted*, %swift.refcounted** %3, align 8
// CHECK:   call void @swift_retain(%swift.refcounted* %4) {{#[0-9]+}}
// CHECK:   store %swift.refcounted* %4, %swift.refcounted** %2, align 8
// CHECK:   %5 = bitcast %O34enum_value_semantics_special_cases18NullableRefcounted* %0 to %swift.opaque*
// CHECK:   ret %swift.opaque* %5
// CHECK: }

// CHECK-LABEL: define linkonce_odr hidden %swift.opaque* @_TwcaO34enum_value_semantics_special_cases18NullableRefcounted(%swift.opaque* %dest, %swift.opaque* %src, %swift.type* %Self) {{.*}} {
// CHECK: entry:
// CHECK:   %0 = bitcast %swift.opaque* %dest to %O34enum_value_semantics_special_cases18NullableRefcounted*
// CHECK:   %1 = bitcast %swift.opaque* %src to %O34enum_value_semantics_special_cases18NullableRefcounted*
// CHECK:   %2 = bitcast %O34enum_value_semantics_special_cases18NullableRefcounted* %0 to %swift.refcounted**
// CHECK:   %3 = bitcast %O34enum_value_semantics_special_cases18NullableRefcounted* %1 to %swift.refcounted**
// CHECK:   %4 = load %swift.refcounted*, %swift.refcounted** %2, align 8
// CHECK:   %5 = load %swift.refcounted*, %swift.refcounted** %3, align 8
// CHECK:   call void @swift_retain(%swift.refcounted* %5) {{#[0-9]+}}
// CHECK:   store %swift.refcounted* %5, %swift.refcounted** %2, align 8
// CHECK:   call void @swift_release(%swift.refcounted* %4) {{#[0-9]+}}
// CHECK:   %6 = bitcast %O34enum_value_semantics_special_cases18NullableRefcounted* %0 to %swift.opaque*
// CHECK:   ret %swift.opaque* %6
// CHECK: }

// CHECK-LABEL: define linkonce_odr hidden %swift.opaque* @_TwtaO34enum_value_semantics_special_cases18NullableRefcounted(%swift.opaque* %dest, %swift.opaque* %src, %swift.type* %Self) {{.*}} {
// CHECK: entry:
// CHECK:   %0 = bitcast %swift.opaque* %dest to %O34enum_value_semantics_special_cases18NullableRefcounted*
// CHECK:   %1 = bitcast %swift.opaque* %src to %O34enum_value_semantics_special_cases18NullableRefcounted*
// CHECK:   %2 = bitcast %O34enum_value_semantics_special_cases18NullableRefcounted* %0 to %swift.refcounted**
// CHECK:   %3 = bitcast %O34enum_value_semantics_special_cases18NullableRefcounted* %1 to %swift.refcounted**
// CHECK:   %4 = load %swift.refcounted*, %swift.refcounted** %2, align 8
// CHECK:   %5 = load %swift.refcounted*, %swift.refcounted** %3, align 8
// CHECK:   store %swift.refcounted* %5, %swift.refcounted** %2, align 8
// CHECK:   call void @swift_release(%swift.refcounted* %4) {{#[0-9]+}}
// CHECK:   %6 = bitcast %O34enum_value_semantics_special_cases18NullableRefcounted* %0 to %swift.opaque*
// CHECK:   ret %swift.opaque* %6
// CHECK: }

// With multiple empty cases, the nullable pointer semantics aren't used.
enum MultipleEmptyRefcounted {
  case Ref(Builtin.NativeObject)
  case A
  case B
}

// CHECK-LABEL: define linkonce_odr hidden void @_TwxxO34enum_value_semantics_special_cases23MultipleEmptyRefcounted(%swift.opaque* %object, %swift.type* %Self) {{.*}} {
// CHECK: entry:
// CHECK:   %0 = bitcast %swift.opaque* %object to %O34enum_value_semantics_special_cases23MultipleEmptyRefcounted*
// CHECK:   %1 = bitcast %O34enum_value_semantics_special_cases23MultipleEmptyRefcounted* %0 to i64*
// CHECK:   %2 = load i64, i64* %1, align 8
// CHECK:   switch i64 %2, label %3 [
// CHECK:     i64 0, label %5
// CHECK:     i64 2, label %5
// CHECK:   ]
// CHECK: ; <label>:3                                       ; preds = %entry
// CHECK:   %4 = bitcast %O34enum_value_semantics_special_cases23MultipleEmptyRefcounted* %0 to %swift.refcounted**
// CHECK:   %toDestroy = load %swift.refcounted*, %swift.refcounted** %4, align 8
// CHECK:   call void @swift_release(%swift.refcounted* %toDestroy) {{#[0-9]+}}
// CHECK:   br label %5
// CHECK: ; <label>:5                                       ; preds = %3, %entry, %entry
// CHECK:   ret void
// CHECK: }
