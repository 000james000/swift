// RUN: %swift -emit-llvm -triple=x86_64-apple-darwin10 %s | FileCheck %s

sil_stage canonical

import Builtin
import swift

class X {
}

class Y : X { }

// super_init.X.init (super_init.X.metatype)() -> super_init.X
sil @_TFC10super_init1XcfMS0_FT_S0_ : $@cc(method) @thin (@owned X) -> @owned X {
bb0(%0 : $X):
  debug_value %0 : $X  // let self                // id: %1
  return %0 : $X                                  // id: %2
}

// super_init.Y.init (super_init.Y.metatype)() -> super_init.Y
// CHECK-LABEL: _TFC10super_init1YcfMS0_FT_S0_
sil @_TFC10super_init1YcfMS0_FT_S0_ : $@cc(method) @thin (@owned Y) -> @owned Y {
bb0(%0 : $Y):
  %1 = alloc_stack $Y  // let self                // users: %8, %10, %2
  store %0 to %1#1 : $*Y                          // id: %2
  strong_retain %0 : $Y                           // id: %3
  %4 = upcast %0 : $Y to $X                       // user: %6
  // function_ref super_init.X.init (super_init.X.metatype)() -> super_init.X
  // CHECK: [[SELF:%[0-9A-Za-z_.]+]] = call %C10super_init1X* @_TFC10super_init1XcfMS0_FT_S0_
  // CHECK-NOT: swift_dynamicCastClassUnconditional
  // CHECK: bitcast %C10super_init1X* [[SELF]] to %C10super_init1Y*
  // CHECK-NOT: swift_dynamicCastClassUnconditional
  %5 = function_ref @_TFC10super_init1XcfMS0_FT_S0_ : $@cc(method) @thin (@owned X) -> @owned X // user: %6
  %6 = apply %5(%4) : $@cc(method) @thin (@owned X) -> @owned X // user: %7
  %7 = self_downcast %6 : $X to $Y                // users: %11, %8
  store %7 to %1#1 : $*Y                          // id: %8
  strong_release %0 : $Y                          // id: %9
  dealloc_stack %1#0 : $*@local_storage Y         // id: %10
  // CHECK: ret
  return %7 : $Y                                  // id: %11
}

