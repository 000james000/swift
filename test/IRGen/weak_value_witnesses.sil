// RUN: %swift -target x86_64-apple-darwin10 %s -emit-ir | FileCheck %s

import Swift

class C {}

struct NoWeak {
  var x, y: C
}

struct SomeWeak {
  var x: C
  @weak var y: C?
}

struct Gen<T> {
  var x: C
  var y: T
}

// The default memcpy-ing witness is good enough for NoWeak.
// CHECK-NOT: define linkonce_odr hidden %swift.opaque* @_TwtkV20weak_value_witnesses6NoWeak(%swift.opaque* %dest, %swift.opaque* %src, %swift.type* %Self)

// Weak references must be taken by swift_weakTakeInit.
// CHECK-LABEL: define linkonce_odr hidden %swift.opaque* @_TwtkV20weak_value_witnesses8SomeWeak(%swift.opaque* %dest, %swift.opaque* %src, %swift.type* %Self)
// CHECK:         call void @swift_weakTakeInit

// Generic types must be taken using their value witness.
// CHECK-LABEL: define linkonce_odr hidden %swift.opaque* @_TwtkV20weak_value_witnesses3Gen(%swift.opaque* %dest, %swift.opaque* %src, %swift.type* %Self)
// CHECK:         call %swift.opaque* %initializeWithTake
