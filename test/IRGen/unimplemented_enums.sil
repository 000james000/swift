// RUN: %swift -emit-ir %s -verify
// XFAIL: linux

enum Either<T, U> { // expected-error{{unimplemented}}
  case Left(T)
  case Right(T)
}

sil @switch_either : $@thin <T, U> (@in Either<T, U>) -> () {
entry(%x : $*Either<T, U>):
  switch_enum_addr %x : $*Either<T, U>, case #Either.Left!enumelt.1: left, case #Either.Right!enumelt.1: right
left:
  %l = unchecked_take_enum_data_addr %x : $*Either<T, U>, #Either.Left!enumelt.1
  br end
right:
  %r = unchecked_take_enum_data_addr %x : $*Either<T, U>, #Either.Right!enumelt.1
  br end
end:
  return undef : $()
}
