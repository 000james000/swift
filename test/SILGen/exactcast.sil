// RUN: %swift -emit-silgen %s
// Make sure we are not crashing on this one.

sil_stage canonical

import Builtin
import Swift
import SwiftShims

class Node {
  @sil_stored var index: Int { get set }
  init(index: Int)
  func check() -> Int
  @objc deinit 
}

class ParentNode : Node {
  init(left: Node, right: Node, index: Int)
  @objc deinit 
  override init(index: Int)
}

// pic_crash.Node.init (pic_crash.Node.Type)(index : Swift.Int) -> pic_crash.Node
sil @_TFC9pic_crash4NodecfMS0_FT5indexSi_S0_ : $@cc(method) @thin (Int, @owned Node) -> @owned Node 
sil @_TFC9pic_crash4NodeCfMS0_FT5indexSi_S0_ : $@thin (Int, @thick Node.Type) -> @owned Node 
sil @_TFC9pic_crash4Node5checkfS0_FT_Si : $@cc(method) @thin (@owned Node) -> Int {
bb0(%0 : $Node):
  %1 = class_method %0 : $Node, #Node.index!getter.1 : Node -> () -> Int , $@cc(method) @thin (@owned Node) -> Int // user: %11
  checked_cast_br [exact] %0 : $Node to $ParentNode, bb2, bb3 // id: %2

bb1(%3 : $Int):                                   // Preds: bb2 bb3
  return %3 : $Int                                // id: %4

bb2(%5 : $ParentNode):                            // Preds: bb0
  %6 = upcast %5 : $ParentNode to $Node           // users: %7, %9
  %7 = ref_element_addr %6 : $Node, #Node.index   // user: %8
  %8 = load %7 : $*Int                            // user: %10
  strong_release %6 : $Node                       // id: %9
  br bb1(%8 : $Int)                               // id: %10

bb3:                                              // Preds: bb0
  %11 = apply %1(%0) : $@cc(method) @thin (@owned Node) -> Int // user: %12
  br bb1(%11 : $Int)                              // id: %12
}

sil @_TFC9pic_crash4Noded : $@cc(method) @thin (@owned Node) -> @owned Builtin.NativeObject 
sil @_TFC9pic_crash4NodeD : $@cc(method) @thin (@owned Node) -> () 
sil [transparent] @_TFC9pic_crash4Nodeg5indexSi : $@cc(method) @thin (@owned Node) -> Int 
sil [transparent] @_TFC9pic_crash4Nodes5indexSi : $@cc(method) @thin (Int, @owned Node) -> () 
sil @_TFC9pic_crash10ParentNodecfMS0_FT4leftCS_4Node5rightS1_5indexSi_S0_ : $@cc(method) @thin (@owned Node, @owned Node, Int, @owned ParentNode) -> @owned ParentNode 
sil @_TFC9pic_crash10ParentNodeCfMS0_FT4leftCS_4Node5rightS1_5indexSi_S0_ : $@thin (@owned Node, @owned Node, Int, @thick ParentNode.Type) -> @owned ParentNode 
sil @_TFC9pic_crash10ParentNoded : $@cc(method) @thin (@owned ParentNode) -> @owned Builtin.NativeObject 
sil @_TFC9pic_crash10ParentNodeD : $@cc(method) @thin (@owned ParentNode) -> () 
sil @_TFC9pic_crash10ParentNodecfMS0_FT5indexSi_S0_ : $@cc(method) @thin (Int, @owned ParentNode) -> @owned ParentNode 
sil @_TFC9pic_crash10ParentNodeCfMS0_FT5indexSi_S0_ : $@thin (Int, @thick ParentNode.Type) -> @owned ParentNode 
sil public_external [transparent] @_TFSs26_unimplemented_initializerFTVSs12StaticString8initNameS_4fileS_4lineSu6columnSu_T_ : $@thin @noreturn (StaticString, StaticString, StaticString, UInt, UInt) -> ()
sil public_external @_TFVSs12StaticString32_convertFromBuiltinStringLiteralfMS_FTBp8byteSizeBw7isASCIIBi1__S_ : $@thin (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin StaticString.Type) -> StaticString 
sil public_external [transparent] @_TFSu33_convertFromBuiltinIntegerLiteralfMSuFBi2048_Su : $@thin (Builtin.Int2048, @thin UInt.Type) -> UInt 
sil @swift_reportUnimplementedInitializer : $@thin (UnsafePointer<UInt8>, UInt, UnsafePointer<UInt8>, UInt) -> ()

sil_vtable Node {
  #Node.init!initializer.1: _TFC9pic_crash4NodecfMS0_FT5indexSi_S0_	// pic_crash.Node.init (pic_crash.Node.Type)(index : Swift.Int) -> pic_crash.Node
  #Node.check!1: _TFC9pic_crash4Node5checkfS0_FT_Si	// pic_crash.Node.check (pic_crash.Node)() -> Swift.Int
  #Node.index!getter.1: _TFC9pic_crash4Nodeg5indexSi	// pic_crash.Node.index.getter : Swift.Int
  #Node.index!setter.1: _TFC9pic_crash4Nodes5indexSi	// pic_crash.Node.index.setter : Swift.Int
}

sil_vtable ParentNode {
  #Node.init!initializer.1: _TFC9pic_crash10ParentNodecfMS0_FT5indexSi_S0_	// pic_crash.ParentNode.init (pic_crash.ParentNode.Type)(index : Swift.Int) -> pic_crash.ParentNode
  #Node.check!1: _TFC9pic_crash4Node5checkfS0_FT_Si	// pic_crash.Node.check (pic_crash.Node)() -> Swift.Int
  #Node.index!getter.1: _TFC9pic_crash4Nodeg5indexSi	// pic_crash.Node.index.getter : Swift.Int
  #Node.index!setter.1: _TFC9pic_crash4Nodes5indexSi	// pic_crash.Node.index.setter : Swift.Int
  #ParentNode.init!initializer.1: _TFC9pic_crash10ParentNodecfMS0_FT4leftCS_4Node5rightS1_5indexSi_S0_	// pic_crash.ParentNode.init (pic_crash.ParentNode.Type)(left : pic_crash.Node, right : pic_crash.Node, index : Swift.Int) -> pic_crash.ParentNode
}

