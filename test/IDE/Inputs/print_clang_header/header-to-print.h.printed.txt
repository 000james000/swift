import Foundation
import CoreFoundation
import Dispatch

var MY_MACRO: Int32 { get }

func doSomethingInHead(_ arg: Int32)

class BaseInHead {
  class func doIt(_ arg: Int32)
  func doIt(_ arg: Int32)
}

/// Awesome name.
class SameName {
}
protocol SameNameProtocol {
}

extension BaseInHead {
  class func doItInCategory()
  func doItInCategory()
}

protocol Superproto {
  func lala()
}

class MyLittleCFType : _CFObject {
}

class MaybeAvailable {
  @available(OSX 10.1, *)
  class func method1()
  @available(OSX 10.1, *)
  func method1()
  @available(OSX 10.1, *)
  class func method2()
  @available(OSX 10.1, *)
  func method2()
  @available(OSX, deprecated: 10.10)
  class func method3()
  @available(OSX, deprecated: 10.10)
  func method3()
  @available(OSX, introduced: 10.1, deprecated: 10.10, obsoleted: 10.11)
  class func method4()
  @available(OSX, introduced: 10.1, deprecated: 10.10, obsoleted: 10.11)
  func method4()
}
