@exported import Foo.FooSub
@exported import FooHelper


/// Aaa.  FooEnum1.  Bbb.
struct FooEnum1 {
  init(_ value: UInt32)
  var value: UInt32
}

/// Aaa.  FooEnum1X.  Bbb.
var FooEnum1X: FooEnum1 { get }
struct FooEnum2 {
  init(_ value: UInt32)
  var value: UInt32
}
var FooEnum2X: FooEnum2 { get }
var FooEnum2Y: FooEnum2 { get }
struct FooEnum3 {
  init(_ value: UInt32)
  var value: UInt32
}
var FooEnum3X: FooEnum3 { get }
var FooEnum3Y: FooEnum3 { get }

/// Aaa.  FooComparisonResult.  Bbb.
enum FooComparisonResult : Int {
  case OrderedAscending
  case OrderedSame
  case OrderedDescending
}

/// Aaa.  FooRuncingOptions.  Bbb.
struct FooRuncingOptions : RawOptionSetType {
  init()
  init(_ value: Int)
  var value: Int
  static var EnableMince: FooRuncingOptions { get }
  static var EnableQuince: FooRuncingOptions { get }
  static func fromMask(raw: Int) -> FooRuncingOptions
  static func fromRaw(raw: Int) -> FooRuncingOptions?
  func toRaw() -> Int
  func getLogicValue() -> Bool
  static func convertFromNilLiteral() -> FooRuncingOptions
}
struct FooStruct1 {
  var x: Int32
  var y: Double
}
struct FooStruct2 {
  var x: Int32
  var y: Double
}
typealias FooStructTypedef1 = FooStruct2
struct FooStructTypedef2 {
  var x: Int32
  var y: Double
}

/// Aaa.  FooTypedef1.  Bbb.
typealias FooTypedef1 = Int32

/// Aaa.  fooIntVar.  Bbb.
var fooIntVar: Int32

/// Aaa.  fooFunc1.  Bbb.
func fooFunc1(a: Int32) -> Int32
func fooFunc1AnonymousParam(_: Int32) -> Int32
func fooFunc3(a: Int32, b: Float, c: Double, d: UnsafePointer<Int32>) -> Int32
func fooFuncWithBlock(blk: ((Float) -> Int32)!)
func fooFuncWithFunctionPointer(fptr: CFunctionPointer<((Float) -> Int32)>)
@noreturn func fooFuncNoreturn1()
@noreturn func fooFuncNoreturn2()

/**
 * Aaa.  fooFuncWithComment1.  Bbb.
 * Ccc.
 *
 * Ddd.
 */
func fooFuncWithComment1()

/*!
  Aaa.  fooFuncWithComment2.  Bbb.
 */
func fooFuncWithComment2()

/**
 * Aaa.  fooFuncWithComment3.  Bbb.
 */
/**
 * Ccc.
 */
func fooFuncWithComment3()

/**
 * Aaa.  fooFuncWithComment4.  Bbb.
 */
/// Ddd.
func fooFuncWithComment4()

/// Aaa.  fooFuncWithComment5.  Bbb.
/// Ccc.
///
/// Ddd.
func fooFuncWithComment5()

/// Aaa.  redeclaredInMultipleModulesFunc1.  Bbb.
func redeclaredInMultipleModulesFunc1(a: Int32) -> Int32

/// Aaa.  FooProtocolBase.  Bbb.
protocol FooProtocolBase {

  /// Aaa.  fooProtoFunc.  Bbb.
  /// Ccc.
  func fooProtoFunc()

  /// Aaa.  fooProtoFuncWithExtraIndentation1.  Bbb.
  /// Ccc.
  func fooProtoFuncWithExtraIndentation1()

  /**
   * Aaa.  fooProtoFuncWithExtraIndentation2.  Bbb.
   * Ccc.
   */
  func fooProtoFuncWithExtraIndentation2()
  class func fooProtoClassFunc()
  var fooProperty1: Int32 { get set }
  var fooProperty2: Int32 { get set }
  var fooProperty3: Int32 { get }
}
protocol FooProtocolDerived : FooProtocolBase {
}
class FooClassBase {
  class func fooBaseInstanceFunc0()
  func fooBaseInstanceFunc0()
  class func fooBaseInstanceFunc1(anObject: AnyObject!) -> FooClassBase!
  func fooBaseInstanceFunc1(anObject: AnyObject!) -> FooClassBase!
  init()
  convenience init(withFloat f: Float)
  class func fooBaseInstanceFuncOverridden()
  func fooBaseInstanceFuncOverridden()
  class func fooBaseClassFunc0()
}

extension FooClassBase {
  class func _internalMeth3() -> AnyObject!
  func _internalMeth3() -> AnyObject!
}

extension FooClassBase {
  class func _internalMeth2() -> AnyObject!
  func _internalMeth2() -> AnyObject!
  class func nonInternalMeth() -> AnyObject!
  func nonInternalMeth() -> AnyObject!
}

extension FooClassBase {
  class func _internalMeth1() -> AnyObject!
  func _internalMeth1() -> AnyObject!
}

/// Aaa.  FooClassDerived.  Bbb.
class FooClassDerived : FooClassBase, FooProtocolDerived, FooProtocolBase {
  var fooProperty1: Int32
  var fooProperty2: Int32
  var fooProperty3: Int32 { get }
  func fooInstanceFunc0()
  func fooInstanceFunc1(a: Int32)
  func fooInstanceFunc2(a: Int32, withB b: Int32)
  func fooBaseInstanceFuncOverridden()
  class func fooClassFunc0()
  init()
  convenience init(withFloat f: Float)

  /// Aaa.  fooProtoFunc.  Bbb.
  /// Ccc.
  func fooProtoFunc()

  /// Aaa.  fooProtoFuncWithExtraIndentation1.  Bbb.
  /// Ccc.
  func fooProtoFuncWithExtraIndentation1()

  /**
   * Aaa.  fooProtoFuncWithExtraIndentation2.  Bbb.
   * Ccc.
   */
  func fooProtoFuncWithExtraIndentation2()
  class func fooProtoClassFunc()
}
var FOO_MACRO_1: Int32 { get }
var FOO_MACRO_2: Int32 { get }
var FOO_MACRO_3: Int32 { get }
var FOO_MACRO_4: UInt32 { get }
var FOO_MACRO_5: UInt64 { get }
var FOO_MACRO_REDEF_1: Int32 { get }
var FOO_MACRO_REDEF_2: Int32 { get }
func theLastDeclInFoo()
func _internalTopLevelFunc()
struct _InternalStruct {
  var x: Int32
}
protocol _InternalProt {
}
class ClassWithInternalProt : _InternalProt {
}
func fooSubFunc1(a: Int32) -> Int32
struct FooSubEnum1 {
  init(_ value: UInt32)
  var value: UInt32
}
var FooSubEnum1X: FooSubEnum1 { get }
var FooSubEnum1Y: FooSubEnum1 { get }
var FooSubUnnamedEnumeratorA1: Int { get }
