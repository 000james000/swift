//===--- Maths.swift ------------------------------------------*- swift -*-===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2019 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

// MARK: - Free functions defined on FloatingPoint
%for constraint in ["T: FloatingPoint", "T: SIMD, T.Scalar: FloatingPoint"]:
% for (func,dir) in [("ceil", ".up"), ("floor", ".down"), ("round", ""), ("trunc", ".towardZero")]:
@_alwaysEmitIntoClient
public func ${func}<T>(_ x: T) -> T where ${constraint} {
  return x.rounded(${dir})
}

%end
@_alwaysEmitIntoClient
public func sqrt<T>(_ x: T) -> T where ${constraint} {
  return x.squareRoot()
}

@_alwaysEmitIntoClient
public func fma<T>(_ x: T, _ y: T, _ z: T) -> T where ${constraint} {
  return z.addingProduct(x, y)
}

%end
@_alwaysEmitIntoClient
public func remainder<T>(_ x: T, _ y: T) -> T where T: FloatingPoint {
  return x.remainder(dividingBy: y)
}

@_alwaysEmitIntoClient
public func fmod<T>(_ x: T, _ y: T) -> T where T: FloatingPoint {
  return x.truncatingRemainder(dividingBy: y)
}

// MARK: - Free functions defined on Mathsable
%from SwiftMathsFunctions import *
%for func in MathFunctions:

@_alwaysEmitIntoClient
public func ${func.free_decl()} {
  return T.Maths.${func.name}(${func.params()})
}
%end
