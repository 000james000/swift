//===--- MappedNames.def - Mapped Name Database -----------------*- C++ -*-===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2015 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See http://swift.org/LICENSE.txt for license information
// See http://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//
//
// This file defines the database of C function names and Objective-C
// selectors that are remapped on import to a specific Swift name.
// ===---------------------------------------------------------------------===//

/// MAP_SELECTOR(Selector, ForMethod, ForInitializer, BaseName, ArgNames)
///
///   Selector: The Objective-C selector that will be mapped into the
///   given Swift method name, in the form of a parenthesized,
///   comma-separated list containing the # of method paramaters
///   followed by the selector pieces in quotes.
///
///   ForMethod: Boolean flag indicating whether this split is valid
///   for a method.
///
///   ForInitializer: Boolean flag indicating whether this split is valid
///   for an initializer.

///   BaseName: The base name of the Swift method name, as a string.
///
///   ArgNames: The argument names of the Swift method name, as a
///   comma-separated list of strings in parentheses.
///
/// Note that the selector and method name must have the same number
/// of arguments, i.e., the same number of colons.
#ifndef MAP_SELECTOR
#  define MAP_SELECTOR(Selector, ForMethod, ForInitializer, BaseName, ArgNames)
#endif

MAP_SELECTOR((2, "tryToPerform", "with"), true, false,
             "tryToPerform", ("selector", "with"))
MAP_SELECTOR((1, "replyToOpenOrPrint"), true, false,
             "replyToOpenOrPrint", ("reply"))
MAP_SELECTOR((1, "bezierPathWithOvalInRect"), true, false,
             "bezierPath", ("ovalInRect"))
MAP_SELECTOR((1, "appendBezierPathWithOvalInRect"), true, false,
             "appendBezierPath", ("ovalInRect"))
MAP_SELECTOR((4, "appendBezierPathWithArcWithCenter", "radius", "startAngle",
              "endAngle"), true, false,
             "appendBezierPath", 
             ("arcWithCenter", "radius", "startAngle", "endAngle"))
MAP_SELECTOR((5, "appendBezierPathWithArcWithCenter", "radius", "startAngle",
              "endAngle", "clockwise"), true, false,
             "appendBezierPath", 
             ("arcWithCenter", "radius", "startAngle", "endAngle", "clockwise"))
MAP_SELECTOR((3, "appendBezierPathWithArcFromPoint", "toPoint", "radius"),
              true, false,
             "appendBezierPath", 
             ("arcFromPoint", "toPoint", "radius"))
MAP_SELECTOR((1, "sendActionOn"), true, false,
             "sendActionOn", ("mask"))
MAP_SELECTOR((1, "scrollItemAtIndexToTop"), true, false,
             "scrollItemToTop", ("atIndex"))
MAP_SELECTOR((1, "scrollItemAtIndexToVisible"), true, false,
             "scrollItemToVisible", ("atIndex"))

// NSResponder
MAP_SELECTOR((1, "moveToBeginningOfLine"), true, false,
             "moveToBeginningOfLine", (""))
MAP_SELECTOR((1, "moveToEndOfLine"), true, false,
             "moveToEndOfLine", (""))
MAP_SELECTOR((1, "moveToBeginningOfParagraph"), true, false,
             "moveToBeginningOfParagraph", (""))
MAP_SELECTOR((1, "moveToEndOfParagraph"), true, false,
             "moveToEndOfParagraph", (""))
MAP_SELECTOR((1, "moveToEndOfDocument"), true, false,
             "moveToEndOfDocument", (""))
MAP_SELECTOR((1, "moveToBeginningOfDocument"), true, false,
             "moveToBeginningOfDocument", (""))
MAP_SELECTOR((1, "moveToBeginningOfLineAndModifySelection"), true, false,
             "moveToBeginningOfLineAndModifySelection", (""))
MAP_SELECTOR((1, "moveToEndOfLineAndModifySelection"), true, false,
             "moveToEndOfLineAndModifySelection", (""))
MAP_SELECTOR((1, "moveToBeginningOfParagraphAndModifySelection"), true, false,
             "moveToBeginningOfParagraphAndModifySelection", (""))
MAP_SELECTOR((1, "moveToEndOfParagraphAndModifySelection"), true, false,
             "moveToEndOfParagraphAndModifySelection", (""))
MAP_SELECTOR((1, "moveToEndOfDocumentAndModifySelection"), true, false,
             "moveToEndOfDocumentAndModifySelection", (""))
MAP_SELECTOR((1, "moveToBeginningOfDocumentAndModifySelection"), true, false,
             "moveToBeginningOfDocumentAndModifySelection", (""))
MAP_SELECTOR((1, "centerSelectionInVisibleArea"), true, false,
             "centerSelectionInVisibleArea", (""))
MAP_SELECTOR((1, "moveToLeftEndOfLine"), true, false,
             "moveToLeftEndOfLine", (""))
MAP_SELECTOR((1, "moveToRightEndOfLine"), true, false,
             "moveToRightEndOfLine", (""))
MAP_SELECTOR((1, "moveToLeftEndOfLineAndModifySelection"), true, false,
             "moveToLeftEndOfLineAndModifySelection", (""))
MAP_SELECTOR((1, "moveToRightEndOfLineAndModifySelection"), true, false,
             "moveToRightEndOfLineAndModifySelection", (""))
MAP_SELECTOR((1, "scrollToBeginningOfDocument"), true, false,
             "scrollToBeginningOfDocument", (""))
MAP_SELECTOR((1, "scrollToEndOfDocument"), true, false,
             "scrollToEndOfDocument", (""))
MAP_SELECTOR((1, "changeCaseOfLetter"), true, false,
             "changeCaseOfLetter", (""))
MAP_SELECTOR((1, "deleteBackwardByDecomposingPreviousCharacter"), true, false,
             "deleteBackwardByDecomposingPreviousCharacter", (""))
MAP_SELECTOR((1, "deleteToBeginningOfLine"), true, false,
             "deleteToBeginningOfLine", (""))
MAP_SELECTOR((1, "deleteToEndOfLine"), true, false,
             "deleteToEndOfLine", (""))
MAP_SELECTOR((1, "deleteToBeginningOfParagraph"), true, false,
             "deleteToBeginningOfParagraph", (""))
MAP_SELECTOR((1, "deleteToEndOfParagraph"), true, false,
             "deleteToEndOfParagraph", (""))
MAP_SELECTOR((1, "deleteToMark"), true, false,
             "deleteToMark", (""))
MAP_SELECTOR((1, "selectToMark"), true, false,
             "selectToMark", (""))
MAP_SELECTOR((1, "swapWithMark"), true, false,
             "swapWithMark", (""))
MAP_SELECTOR((1, "makeBaseWritingDirectionLeftToRight"), true, false,
             "makeBaseWritingDirectionLeftToRight", (""))
MAP_SELECTOR((1, "makeBaseWritingDirectionRightToLeft"), true, false,
             "makeBaseWritingDirectionRightToLeft", (""))
MAP_SELECTOR((1, "makeTextWritingDirectionLeftToRight"), true, false,
             "makeTextWritingDirectionLeftToRight", (""))
MAP_SELECTOR((1, "makeTextWritingDirectionRightToLeft"), true, false,
             "makeTextWritingDirectionRightToLeft", (""))

// NSTableView
MAP_SELECTOR((1, "scrollRowToVisible"), true, false,
             "scrollRowToVisible", ("row"))
MAP_SELECTOR((1, "scrollColumnToVisible"), true, false,
             "scrollColumnToVisible", ("column"))

// NSTableView
MAP_SELECTOR((1, "scrollRangeToVisible"), true, false,
             "scrollRangeToVisible", ("range"))

// NSView
MAP_SELECTOR((1, "scrollRectToVisible"), true, false,
             "scrollRectToVisible", ("rect"))
MAP_SELECTOR((1, "convertPointToBacking"), true, false,
             "convertPointToBacking", ("point"))
MAP_SELECTOR((1, "convertSizeFromBacking"), true, false,
             "convertSizeFromBacking", ("size"))
MAP_SELECTOR((1, "convertRectToBacking"), true, false,
             "convertRectToBacking", ("rect"))
MAP_SELECTOR((1, "convertPointToLayer"), true, false,
             "convertPointToLayer", ("point"))
MAP_SELECTOR((1, "convertSizeFromLayer"), true, false,
             "convertSizeFromLayer", ("size"))
MAP_SELECTOR((1, "convertRectToLayer"), true, false,
             "convertRectToLayer", ("rect"))

// NSViewController
MAP_SELECTOR((1, "presentViewControllerAsSheet"), true, false,
             "presentViewControllerAsSheet", ("rect"))
MAP_SELECTOR((1, "presentViewControllerAsModalWindow"), true, false,
             "presentViewControllerAsModalWindow", ("rect"))

// NSWindow
MAP_SELECTOR((1, "convertRectToScreen"), true, false,
             "convertRectToScreen", ("rect"))
MAP_SELECTOR((1, "convertRectFromScreen"), true, false,
             "convertRectFromScreen", ("rect"))

// NSManagedObject
MAP_SELECTOR((1, "validateForDelete"), true, false,
             "validateForDelete", ("error"))
MAP_SELECTOR((1, "validateForInsert"), true, false,
             "validateForInsert", ("error"))
MAP_SELECTOR((1, "validateForUpdate"), true, false,
             "validateForUpdate", ("error"))

// DRFile
MAP_SELECTOR((2, "hardLinkPointingTo", "inFilesystem"), true, false,
             "hardLink", ("pointingTo", "inFilesystem"))
MAP_SELECTOR((2, "symLinkPointingTo", "inFilesystem"), true, false,
             "symLink", ("pointingTo", "inFilesystem"))
MAP_SELECTOR((2, "finderAliasPointingTo", "inFilesystem"), true, false,
             "finderAlias", ("pointingTo", "inFilesystem"))

// NSAffineTransform
MAP_SELECTOR((2, "translateXBy", "yBy"), true, false,
             "translate", ("xBy", "yBy"))
MAP_SELECTOR((2, "scaleXBy", "yBy"), true, false,
             "scale", ("xBy", "yBy"))

// NSArray
MAP_SELECTOR((1, "indexOfObjectIdenticalTo"), true, false,
             "index", ("ofObjectIdenticalTo"))
MAP_SELECTOR((2, "indexOfObjectIdenticalTo", "inRange"), true, false,
             "index", ("ofObjectIdenticalTo", "inRange"))
MAP_SELECTOR((1, "removeObjectIdenticalTo"), true, false,
             "removeObject", ("identicalTo"))
MAP_SELECTOR((2, "removeObjectIdenticalTo", "inRange"), true, false,
             "removeObject", ("identicalTo", "inRange"))

// NSIndexSet
MAP_SELECTOR((1, "indexGreaterThanOrEqualToIndex"), true, false,
             "indexGreaterThanOrEqualToIndex", (""))
MAP_SELECTOR((1, "indexLessThanOrEqualToIndex"), true, false,
             "indexLessThanOrEqualToIndex", (""))

// SKAction
MAP_SELECTOR((3, "scaleXBy", "y", "duration"), true, false,
             "scale", ("xBy", "y", "duration"))
MAP_SELECTOR((3, "scaleXTo", "y", "duration"), true, false,
             "scale", ("xTo", "y", "duration"))
MAP_SELECTOR((2, "scaleXTo", "duration"), true, false,
             "scale", ("xTo", "duration"))
MAP_SELECTOR((2, "scaleYTo", "duration"), true, false,
             "scale", ("yTo", "duration"))

// NSFilePresenter
MAP_SELECTOR((1, "presentedItemDidMoveToURL"), true, false,
             "presentedItemDidMove", ("toURL"))
MAP_SELECTOR((1, "presentedSubitemDidAppearAtURL"), true, false,
             "presentedSubitemDidAppear", ("atURL"))
MAP_SELECTOR((1, "presentedSubitemDidChangeAtURL"), true, false,
             "presentedSubitemDidChange", ("atURL"))
#undef MAP_SELECTOR

